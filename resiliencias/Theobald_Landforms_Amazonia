/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var image = ee.Image("projects/ee-resilience/assets/Landforms_Assets/landform_types_Amazon");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
var bioma = ee.FeatureCollection("projects/ee-lucasljardim9/assets/Biome")
                       .select("Bioma")
                       .filter(ee.Filter.eq("Bioma", "Amazônia"));

var landform = ee.Image("CSP/ERGo/1_0/Global/ALOS_landforms");

var land_tnc = ee.Image("projects/ee-resilience/assets/Landforms_Assets/landform_types_Amazon");
var sld_intervals =
'<RasterSymbolizer>' +
  '<ColorMap type="intervals" extended="false">' +
    '<ColorMapEntry color="#ff8fbe" quantity="11" label="Warm Summit/ridge"/>' +
    '<ColorMapEntry color="#ffbdbe" quantity="12" label="Summit/ridge"/>' +
    '<ColorMapEntry color="#e08fbe" quantity="13" label="Cool Summit/ridge"/>' +
    '<ColorMapEntry color="#c8c284" quantity="14" label="Mountain/divide"/>' +
    '<ColorMapEntry color="#ef595a" quantity="15" label="Cliff"/>' +
    '<ColorMapEntry color="#83e763" quantity="21" label="Warm Upper slope"/>' +
    '<ColorMapEntry color="#83e747" quantity="22" label="Upper slope"/>' +
    '<ColorMapEntry color="#c8f6ad" quantity="23" label="Cool Upper slope"/>' +
    '<ColorMapEntry color="#af7b53" quantity="24" label="Flat Upper slope"/>' +
    '<ColorMapEntry color="#0a7000" quantity="31" label="Warm Lower slope"/>' +
    '<ColorMapEntry color="#08a702" quantity="32" label="Lower slope"/>' +
    '<ColorMapEntry color="#08a76c" quantity="33" label="Cool Lower slope"/>' +
    '<ColorMapEntry color="#ffffbe" quantity="34" label="Flat Lower slope"/>' +
    '<ColorMapEntry color="#a9a800" quantity="41" label="Valley"/>' +
    '<ColorMapEntry color="#dba800" quantity="42" label="Valley (narrow)"/>' +
  '</ColorMap>' +
'</RasterSymbolizer>';

var sld_landform = // Escalas para Landforms
'<RasterSymbolizer>' +
  '<ColorMap type="intervals" extended="false">' +
    '<ColorMapEntry color="#ffc408" quantity="3" label="Cool Steep Slope"/>' +
    '<ColorMapEntry color="#ffa101" quantity="4" label="Warm Steep Slope"/>' +
    '<ColorMapEntry color="#ef595a" quantity="5" label="Cliff"/>' +
    '<ColorMapEntry color="#ffbdbe" quantity="11" label="Summit/Ridgetop"/>' +
    '<ColorMapEntry color="#6e4100" quantity="13" label="Slope Crest"/>' +
    '<ColorMapEntry color="#af7b53" quantity="21" label="Flat Hilltop"/>' +
    '<ColorMapEntry color="#c8c284" quantity="22" label="Gentle Slope Hilltop"/>' +
    '<ColorMapEntry color="#c8f6ad" quantity="23" label="Cool Sideslope"/>' +
    '<ColorMapEntry color="#83e763" quantity="24" label="Warm Sideslope"/>' +
    '<ColorMapEntry color="#ffffbe" quantity="30" label="Dry Flats"/>' +
    '<ColorMapEntry color="#a9a800" quantity="32" label="Valley/Toeslope"/>' +
    '<ColorMapEntry color="#b671f2" quantity="39" label="Moist Flats"/>' +
    '<ColorMapEntry color="#08a702" quantity="43" label="Cool Footslope/Cove"/>' +
    '<ColorMapEntry color="#0a7000" quantity="44" label="Warm Footslope/Cove"/>' +
  '</ColorMap>' +
'</RasterSymbolizer>';

//creating a center for the maps on Manaus
var center = {lon:-59.971332,lat:-3.076426, zoom:11};

// Create two maps.
var leftMap = ui.Map(center);
var rightMap = ui.Map(center);

// Create a split panel with the two maps.
var splitPanel = ui.SplitPanel({
  firstPanel: leftMap,
  secondPanel: rightMap,
  orientation: 'horizontal',
  wipe: true
});
// Remove the default map from the root panel.
ui.root.clear();

// Add our split panel to the root panel.
ui.root.add(splitPanel);


//adding Theobald to the left part
leftMap.addLayer(landform.sldStyle(sld_intervals).clip(bioma), {}, 'Theobald');

//adding TNC classification on the right
rightMap.addLayer(land_tnc.sldStyle(sld_landform).clip(bioma), {}, 'TNC');

// legend for theobald
var legend = ui.Panel({
             style: {
               position:'bottom-right',
               padding: '8px 10px'
             }
});

var makeRow = function(color, name) {
 
      // Create the label that is actually the colored box.
      var colorBox = ui.Label({
        style: {
          backgroundColor: color,
          // Use padding to give the box height and width.
          padding: '8px',
          margin: '0 0 4px 0'
        }
      });
 
      // Create the label filled with the description text.
      var description = ui.Label({
        value: name,
        style: {margin: '0 0 4px 6px'}
      });
 
      // return the panel
      return ui.Panel({
        widgets: [colorBox, description],
        layout: ui.Panel.Layout.Flow('horizontal')
      });
};

var palette = [
"#ff8fbe",
"#ffbdbe",
"#e08fbe",
"#c8c284",
"#ef595a",
"#83e763",
"#83e747",
"#c8f6ad",
"#af7b53",
"#0a7000",
"#08a702",
"#08a76c",
"#ffffbe",
"#a9a800",
"#dba800",
];

var land =[
"11-Warm Summit/ridge",
"12-Summit/ridge",
"13-Cool Summit/ridge",
"14-Mountain/divide",
"15-Cliff",
"21-Warm Upper slope",
"22-Upper slope",
"23-Cool Upper slope",
"24-Flat Upper slope",
"31-Warm Lower slope",
"32-Lower slope",
"33-Cool Lower slope",
"34-Flat Lower slope",
"41-Valley",
"42-Valley (narrow)"
];

for (var i = 0; i < 15; i++) {
  legend.add(makeRow(palette[i], land[i]));
  }  
 
leftMap.add(legend);

//legend for TNC
var legend2 = ui.Panel({
             style: {
               position:'bottom-right',
               padding: '8px 10px'
             }
});

var makeRow = function(color, name) {
 
      // Create the label that is actually the colored box.
      var colorBox = ui.Label({
        style: {
          backgroundColor: color,
          // Use padding to give the box height and width.
          padding: '8px',
          margin: '0 0 4px 0'
        }
      });
 
      // Create the label filled with the description text.
      var description = ui.Label({
        value: name,
        style: {margin: '0 0 4px 6px'}
      });
 
      // return the panel
      return ui.Panel({
        widgets: [colorBox, description],
        layout: ui.Panel.Layout.Flow('horizontal')
      });
};

var palette = [
"#ffc408",
"#ffa101",
"#ef595a",
"#ffbdbe",
"#6e4100",
"#af7b53",
"#c8c284", 
"#c8f6ad",
"#83e763",
"#ffffbe",
"#a9a800",
"#b671f2",
"#010101",
"#08a702",
"#0a7000",
];

var land =[
"3-Cool Steep Slope",
"4-Warm Steep Slope",
"5-Cliff",
"11-Summit/Ridgetop",
"13-Slope Crest",
"21-Flat Hilltop",
"22-Gentle Slope Hilltop",
"23-Cool Sideslope",
"24-Warm Sideslope",
"30-Dry Flats",
"32-Valley/Toeslope",
"39-Moist Flats",
"51-Flat at the bottom steep slope",
"43-Cool Footslope/Cove",
"44-Warm Footslope/Cove",
];

for (var i = 0; i < 15; i++) {
  legend2.add(makeRow(palette[i], land[i]));
  }  
 
rightMap.add(legend2);


var bioma = ee.FeatureCollection("projects/ee-lucasljardim9/assets/Biome")
                       .select("Bioma")
                       .filter(ee.Filter.eq("Bioma", "Amazônia"))
                       .map(function(feature){
                         return feature.bounds()
                        })
                       .geometry();


var landform_richness = landform.neighborhoodToBands(ee.Kernel.circle(ee.Number(4)))
                                .reduce(ee.Reducer.countDistinct());

/*
Export.image.toDrive({
  image: landform_richness,
  description: 'Theobald_landform_richness_Amazonia',
  scale: 92.76624,
  region: bioma,
  maxPixels: 965933619 
});
*/
