
var brazil_raster = ee.Image("projects/ee-resilience/assets/brasil_raster");

var scale = brazil_raster.projection().nominalScale();
var geometry = brazil_raster.geometry();

var resilience = ee.Image('projects/ee-resilience/assets/Moving_window_NEWSCALE/Landscape_resilience_ORIGINAL_UNMASKED_200');

var landform = ee.Image('projects/ee-lucasljardim9/assets/landform_types')
.updateMask(brazil_raster);

///////// Counting pixel values of Landscape Resilience for each Landform Type ////////

var histogram = landform.reduceRegion({reducer:ee.Reducer.frequencyHistogram(), 
                                  geometry: landform.geometry(), 
                                  scale: 92.76624, 
                                  maxPixels:1e13
                                  });print(histogram);
 
 
 
var histogram2 = resilience.reduceRegion({reducer:ee.Reducer.frequencyHistogram(), 
                                  geometry: resilience.geometry(), 
                                  scale: 92.76624, 
                                  maxPixels:1e13
                                  });print(histogram2); 
 
 
var image_classes = ee.Dictionary(histogram.get("sum")).keys();
print(image_classes);


var frequency = function(classCodes) {
  // Create an empty dictionary to store frequencies for each class code.
  var frequencies = ee.Dictionary({});
  
  // Loop through the class codes and calculate frequencies for each.
  for (var i = 0; i < classCodes.length; i++) {
    var code = classCodes[i];
    
    // Create a binary mask for the specific class code.
  var mask = landform
             .where(landform.eq(ee.Number.parse(code)), 1)
             .where(landform.neq(ee.Number.parse(code)), 0);

  var map1 = resilience.updateMask(mask); Map.addLayer(mask.selfMask(),{col:'red'}, ''+classCodes[i].toString());
    
    // Calculate the frequency of the extracted values.
    var count = map1
      .reduceRegion({
        reducer: ee.Reducer.frequencyHistogram(),
        geometry: geometry,
        scale: scale,
        maxPixels: 1e13
      });
    // Store the frequency in the dictionary using the class code.
    frequencies = frequencies.set(code, ee.Dictionary(count));
  }
    return frequencies;
};

// Specify the class codes you're interested in as an array.
//the same as the codes of landforms
var image_classes = [
                      '3',
                      '4',
                      '5',
                      '11',
                      '13',
                      '21',
                      '22',
                      '23',
                      '24',
                      '30',
                      '32',
                      '39',
                      '43',
                      '44'
                      ]; 
var frequencies = frequency(image_classes);
print('Frequencies of each Resilience class for Landform Type Codes:', frequencies);


// Convert the frequencies dictionary to an ee.FeatureCollection.
var table = ee.FeatureCollection(
  ee.List(image_classes).map(function(code) {
    return ee.Feature(null, {
      'ClassCode': code,
      'Frequency': frequencies.get(ee.String(code))
    });
  })
);print(table);

// Exporting the results
Export.table.toDrive({
  collection: table,
  description: 'class_frequencies',
  folder: 'your_drive_folder', // Specify your Google Drive folder path
  fileFormat: 'CSV'
});
