
var brazil_raster = ee.Image("projects/ee-resilience/assets/brasil_raster");

var scale = brazil_raster.projection().nominalScale();
var geometry = brazil_raster.geometry();

var resilience = ee.Image('projects/ee-resilience/assets/Moving_window_NEWSCALE/Landscape_resilience_ORIGINAL_UNMASKED_200')
.updateMask(brazil_raster);

var landform = ee.Image('projects/ee-lucasljardim9/assets/landform_types')
.updateMask(brazil_raster);

var bioma = ee.FeatureCollection("projects/ee-lucasljardim9/assets/Biome");

///////// Counting pixel values of Landscape Resilience for each Landform Type ////////

var sld_intervals =
  '<RasterSymbolizer>' +
    '<ColorMap type="intervals" extended="false">' +
      '<ColorMapEntry color="#d3d3d3" quantity="11" label="11"/>' +
      '<ColorMapEntry color="#95bdd5" quantity="12" label="12"/>' +
      '<ColorMapEntry color="#52a6d7" quantity="13" label="13"/>' +
      '<ColorMapEntry color="#0088d9" quantity="14" label="14"/>' +
      '<ColorMapEntry color="#d5ce9c" quantity="21" label="21"/>' +
      '<ColorMapEntry color="#96b89e" quantity="22" label="22"/>' +
      '<ColorMapEntry color="#53a19f" quantity="23" label="23"/>' +
      '<ColorMapEntry color="#0085a1" quantity="24" label="24"/>' +
      '<ColorMapEntry color="#d7c759" quantity="31" label="31"/>' +
      '<ColorMapEntry color="#98b35a" quantity="32" label="32"/>' +
      '<ColorMapEntry color="#539c5b" quantity="33" label="33"/>' +
      '<ColorMapEntry color="#00815c" quantity="34" label="34"/>' +
      '<ColorMapEntry color="#d9be00" quantity="41" label="41"/>' +
      '<ColorMapEntry color="#9aaa00" quantity="42" label="42"/>' +
      '<ColorMapEntry color="#549500" quantity="43" label="43"/>' +
      '<ColorMapEntry color="#007b00" quantity="44" label="44"/>' +
    '</ColorMap>' +
  '</RasterSymbolizer>';

//*************************************************************************************//
///////////////////////////////////// CODES FOR LAYERS //////////////////////////////////
//*************************************************************************************//

//BIOMES//
//Rasterizing biome in the same scale and projection
var Bioma_rast = bioma.reduceToImage({
  properties: ['CD_Bioma'], // Property to use for pixel values
  reducer: ee.Reducer.first()
});

var num_bioma = Bioma_rast.reproject({crs: "EPSG:4326",
                                  scale: 92.76624}); 

//Creating a histogram to see all classes
var hist_bioma = num_bioma.reduceRegion({reducer:ee.Reducer.frequencyHistogram(), 
                                  geometry: geometry, 
                                  scale:  92.76624, 
                                  maxPixels:1e13
                                  }); 

//Creating the code for biome   
var biomeCodes = ee.Dictionary(hist_bioma.get("first")).keys();
print('Codes for the first filter for Biomes', biomeCodes);

//GROUP//
//Creating code for Goup variable

var hist_group = landform.reduceRegion({reducer:ee.Reducer.frequencyHistogram(), 
                                  geometry: geometry, 
                                  scale:  92.76624, 
                                  maxPixels:1e13
                                  });
 
var groupCodes = ee.Dictionary(hist_group.get("sum")).keys();
print('Codes for the first filter for Group variable', groupCodes);

//RESILIENCE//
//Creating code for Resilience variable

var hist_resilience = resilience.reduceRegion({reducer:ee.Reducer.frequencyHistogram(), 
                                  geometry: geometry, 
                                  scale:  92.76624, 
                                  maxPixels:1e13
                                  });
 
var resilienceCodes = ee.Dictionary(hist_resilience.get("z")).keys();
print('Codes for the first filter for landscape resilience', resilienceCodes);

//*************************************************************************************//
///////////////////////////////////////// FUNCTION //////////////////////////////////////
//*************************************************************************************//

var frequency = function(biomeCodes,groupCodes,resilienceCodes) {
  
  // Create an empty dictionary to store frequencies for each class code.
  var frequencies = ee.Dictionary({});
  
  //create a loop for each biome  
  
for (var j = 0; j < biomeCodes.length; j++) {
    var bio_code = biomeCodes[j];

  var mask_biome = num_bioma
             .where(num_bioma.eq(ee.Number.parse(bio_code)), 1)
             .where(num_bioma.neq(ee.Number.parse(bio_code)), 0);

  var map_biome = landform.mask(mask_biome).rename("b1");    

  // Loop through the class codes and calculate frequencies for each.
  
  for (var i = 0; i < groupCodes.length; i++) {
    var grp_code = groupCodes[i];
    
    // Create a binary mask for the specific class code.
    
     var mask_group = map_biome
             .where(map_biome.eq(ee.Number.parse(grp_code)), 1)
             .where(map_biome.neq(ee.Number.parse(grp_code)), 0);

    var map_group = resilience.updateMask(mask_group); 
  
  //Map.addLayer(map_group.sldStyle(sld_intervals),{}, ''+biomeCodes.toString()+'_'+groupCodes[i].toString());

//Will mask based on the group codes for the resilience image.
//To count all pixel classified as that code divided by biome and group

    for (var l = 0; l <resilienceCodes.length; l++) {
      var res_codes = resilienceCodes[l];

         var mask_resilience = map_group
                .where(map_group.eq(ee.Number.parse(grp_code)), 1)
                .where(map_group.neq(ee.Number.parse(grp_code)), 0);
    
       var map_resilience = resilience.updateMask(mask_resilience);
  
  
    // Calculate the frequency of the extracted values.
       var count = map_resilience
      .reduceRegion({
        reducer: ee.Reducer.count(),
        geometry: geometry,
        scale: scale,
        maxPixels: 1e13
      });
    // Store the frequency in the dictionary using the class code.
    frequencies = frequencies.set([biomeCodes,groupCodes,resilienceCodes], ee.Dictionary(count));
  
    return frequencies;
      }
      
    }
  
}};

// Specify the class codes you're interested in as an array.

//the same as the codes of landforms. If you change the group you need to change the codes.
var group_classes = [
                      '3',
                      '4',
                      '5',
                      '11',
                      '13',
                      '21',
                      '22',
                      '23',
                      '24',
                      '30',
                      '32',
                      '39',
                      '43',
                      '44'
                      ];

// Number for the 16 classes of resilience

var resilience_classes =[
                        '11',
                        '12',
                        '13',
                        '14',
                        '21',
                        '22',
                        '23',
                        '24',
                        '31',
                        '32',
                        '33',
                        '34',
                        '41',
                        '42',
                        '43',
                        '44'
                          ];

//Number for all 6 biome classes in CD_Biome
var biome_classes =[
                        '1',
                        '2',
                        '3',
                        '4',
                        '5',
                        '6'
                          ];

// Count the pixels of Resilience classified by the grouping variable inside each biome  

var frequencies = frequency(biome_classes, group_classes, resilience_classes);

print('Frequencies of each Resilience class for Landform Type Codes:', frequencies);


// Convert the frequencies dictionary to an ee.FeatureCollection.
var table = ee.FeatureCollection(
  ee.List(image_classes).map(function(code) {
    return ee.Feature(null, {
      'ClassCode': code,
      'Frequency': frequencies.get(ee.String(code))
    });
  })
);print(table);

// Exporting the results
Export.table.toDrive({
  collection: table,
  description: 'class_frequencies',
  folder: 'your_drive_folder', // Specify your Google Drive folder path
  fileFormat: 'CSV'
});
