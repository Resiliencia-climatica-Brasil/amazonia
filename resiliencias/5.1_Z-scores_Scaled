var Biome = ee.FeatureCollection("projects/ee-resilience/assets/Shapefiles/BR_Municipios_2021")
                        .map(function(feature){
                             return feature.bounds()
                             })
                        .geometry()
                        .dissolve({'maxError': 1})
                        .bounds();

var brasil_raster = ee.Image("projects/ee-resilience/assets/brasil_raster");

var Z_landform = ee.Image('projects/ee-resilience/assets/Moving_window_TEMP/Z-Scores_landforms_movingwindow_50')
                   .updateMask(brasil_raster);

var Z_elevation = ee.Image('projects/ee-resilience/assets/Moving_window_TEMP/Z-Scores_elevation_range_movingwindow_50')
                    .updateMask(brasil_raster);

var Z_wetlands_score = ee.Image('projects/ee-resilience/assets/Moving_window_TEMP/Z-Scores_wetlands_movingwindow_50')
                   .updateMask(brasil_raster);

var Z_soil_diversity = ee.Image('projects/ee-resilience/assets/Moving_window_TEMP/Z-Scores_soil_diversity_movingwindow_50')
                         .updateMask(brasil_raster);

var scale = brasil_raster.projection().nominalScale();

var windows = prompt('Enter the window size based on the Z image name:', '50');
windows = parseInt(windows);
if (isNaN(windows) || windows <= 0) {
   print('Invalid input. Using default value for the window size.');
  windows = 1;}


//Scaling the Z values based on the min-max scaling technique
var scale_z = function(image){
  var minValue = image.reduceRegion({
      reducer: ee.Reducer.min(),
      geometry: brasil_raster.geometry(),
      scale : scale,
      maxPixels:1e13
      });
      
  //var minValue = ee.Image.constant(min);
 
   var maxValue = image.reduceRegion({
      reducer: ee.Reducer.max(),
      scale : scale,
      geometry: brasil_raster.geometry(),
      maxPixels:1e13
      });
  //var maxValue = ee.Image.constant(max);


  var z_scaled = image
                  .subtract(minValue)
                  .divide(minValue.subtract(minValue))
                  .rename('scaled');

  return z_scaled;
};


var Z_elevation_scaled = scale_z(Z_elevation);

var Z_landform_scaled = scale_z(Z_landform);

var Z_soil_diversity_scaled = scale_z(Z_soil_diversity);

var Z_wetlands_score_scaled = scale_z(Z_wetlands_score);


/*

 Map.addLayer(Z_elevation_scaled,      {min:0, max:1}, 'Z_elevation');
 Map.addLayer(Z_landform_scaled,       {min:0, max:1}, 'Z_landform');
 Map.addLayer(Z_soil_diversity_scaled, {min:0, max:1}, 'Z_soil_diversity');
 Map.addLayer(Z_wetlands_score_scaled, {min:0, max:1}, 'Z_wetlands_scor');
*/

var histogram = ui.Chart.image.histogram(({
  image: Z_elevation_scaled,
  scale: scale,
  maxPixels: 1e13}))
  .setOptions({
    title: 'Histogram of Pixel Values Original' ,
    hAxis: {title: 'Pixel Value'},
    vAxis: {title: 'Count'},
    legend: 'none'
  }); print('Z_elevation_scaled ',histogram);

var histogram = ui.Chart.image.histogram(({
  image: Z_landform_scaled,
  scale: scale,
  maxPixels: 1e13}))
  .setOptions({
    title: 'Histogram of Pixel Values Original' ,
    hAxis: {title: 'Pixel Value'},
    vAxis: {title: 'Count'},
    legend: 'none'
  }); print('Z_soil_diversity',histogram);

var histogram = ui.Chart.image.histogram(({
  image: Z_soil_diversity_scaled,
  scale: scale,
  maxPixels: 1e13}))
  .setOptions({
    title: 'Histogram of Pixel Values Original' ,
    hAxis: {title: 'Pixel Value'},
    vAxis: {title: 'Count'},
    legend: 'none'
  }); print('Z_soil_diversity_scaled',histogram);

var histogram = ui.Chart.image.histogram(({
  image: Z_wetlands_score_scaled,
  scale: scale,
  maxPixels: 1e13}))
  .setOptions({
    title: 'Histogram of Pixel Values Original' ,
    hAxis: {title: 'Pixel Value'},
    vAxis: {title: 'Count'},
    legend: 'none'
  }); print('Z_wetlands_score_scaled',histogram);




/////

Export.image.toAsset({image: Z_elevation_scaled, 
                      description: "Z_elevation"+ windows.toString(), 
                      assetId: "Moving_window_TEMP/Z-Scores_elevation_range_movingwindow_" + windows.toString(), 
                      pyramidingPolicy:"median",
                      region:Biome,
                      scale: scale,
                      maxPixels: 1e13});


Export.image.toAsset({image: Z_landform_scaled, 
                    description: "Z_landform"+ windows.toString(), 
                     assetId: "Moving_window_TEMP/Z-Scores_landforms_movingwindow_"+ windows.toString(), 
                     pyramidingPolicy:"median",
                     region:Biome,
                     scale: scale,
                     maxPixels: 1e13});


Export.image.toAsset({image: Z_soil_diversity_scaled, 
                      description: "Z_soil_diversity"+ windows.toString(), 
                      assetId: "Moving_window_TEMP/Z-Scores_soil_diversity_movingwindow_"+ windows.toString(), 
                      pyramidingPolicy:"median",
                      region:Biome,
                      scale: scale,
                      maxPixels: 1e13});


Export.image.toAsset({image: Z_wetlands_score_scaled, 
                      description: "Z_wetlands_score"+ windows.toString(), 
                      assetId: "Moving_window_TEMP/Z-Scores_wetlands_movingwindow_"+ windows.toString(), 
                      pyramidingPolicy:"median",
                      region:Biome,
                      scale: scale,
                      maxPixels: 1e13});

