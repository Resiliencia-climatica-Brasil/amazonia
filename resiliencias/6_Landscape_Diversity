/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var imageVisParam = {"opacity":1,"bands":["z"],"min":-2.5332866614479403,"max":6.585078248484633,"gamma":1};
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// Based on the script 08_landscape_diversity.R by Lucas Jardim

// Importing data ----------------------------------------------------------


var bioma = ee.FeatureCollection("projects/ee-lucasljardim9/assets/Biome")
                       .map(function(feature){
                             return feature.bounds()
                             })
                        .geometry()
                        .dissolve({'maxError': 1})
                        .bounds();


var landform_Z = ee.Image('projects/ee-resilience/assets/Z-Scores/Z-Scores_elevation_range_residual');

var elevation_range_Z = ee.Image('projects/ee-resilience/assets/Z-Scores/Z-Scores_landform_variety');

var wetland_score = ee.Image('projects/ee-resilience/assets/Z-Scores/Z-Scores_wetlands_count');

var soil_diversity =  ee.Image('projects/ee-resilience/assets/Z-Scores/Z-Scores_wetlands_density');


// Step 1 ------------------------------------------------------------------
// Take the average of landform and elevation range only if elevantion range is higher than landform--------

// Test if elevation range is greater than landscape diversity

var landscape_diversity = landform_Z;
Map.addLayer(landscape_diversity, imageVisParam, 'Landscape_Landforms')


var test_1 = elevation_range_Z.gt(landscape_diversity);print(test_1)

Map.addLayer(test_1, {min:0, max:1, palette:['red', 'blue']}, 'Pixels where elevation is GREATER THAN landforms');

// Compute the average elevation
var average_elevation = landform_Z.multiply(2).add(elevation_range_Z).divide(3);

// Update landscape diversity where test_1 is true

var landscape_diversity = landscape_diversity.where(test_1, average_elevation);


// Step 2 ------------------------------------------------------------------
// Take the average of landform, elevation range, and wetland score only if wetland score is higher than Step 1

var test_2 = wetland_score.gt(landscape_diversity);

Map.addLayer(test_2, {min:0, max:1, palette:['red', 'blue']}, 'Pixels where wetland_score is GREATER THAN landscape diversity');

// Calculate average -------------------------------------------------------
// Elevation range higher than landform ------------------------------------

var average_wetland_1 = landform_Z.multiply(2).add(elevation_range_Z).add(wetland_score).divide(4);

var average_wetland_2 = landform_Z.multiply(2).add(wetland_score).divide(3);


// Assigning new landform diversity values ---------------------------------


Map.addLayer(landscape_diversity, imageVisParam, 'landscape_elev_Z')

//IF values of landscape_diversity are < elevation Z Score AND Wetland Z score we will calculate the diversity as landforms*2 + elevation + wetland / 4  

landscape_diversity = landscape_diversity.where(test_1.and(test_2), average_wetland_1); Map.addLayer(landscape_diversity, imageVisParam, 'landscape_wetAvg1')

//IF the values of diversity are < elevation but > wetland; then the diversity will be calculated by landforms*2 + wetlands / 3 

landscape_diversity = landscape_diversity.where(test_1.and(test_2.not()), average_wetland_2); Map.addLayer(landscape_diversity, imageVisParam, 'landscape_wetAvg2' )


// Step 3 ------------------------------------------------------------------
// Take the average of soil diversity only if it is higher than Step 2

var test_3 = soil_diversity.gt(landscape_diversity);


// Averages ----------------------------------------------------------------

var average_soil_1 = landform_Z.multiply(2).add(elevation_range_Z).add(wetland_score).add(soil_diversity).divide(5);

var average_soil_2 = landform_Z.multiply(2).add(elevation_range_Z).add(soil_diversity).divide(4);

var average_soil_3 = landform_Z.multiply(2).add(wetland_score).add(soil_diversity).divide(4);

var average_soil_4 = landform_Z.multiply(2).add(soil_diversity).divide(3);


// Assigning new landscape diversity values  -------------------------------

//1) IF values of Diversity are SMALLER than elevation AND Wetlands AND Soil Diversity:
// Landscape diversity = landforms*2 + elevation + wetland + soil /5

//2) IF diversity is SMALER then elevation AND Soil but BIGGER then Wetlands:
// Landscape diversity = landforms*2 + elevation + soil /4

//3) IF diversity is SMALLER than Wetlands AND soil but bigger than Elevation:
// Landscape diversity = landforms*2 + wetland + soil /4

//4) IF diversity is SMALLER than soil but bigger than Elevation AND Wetlands:
// Landscape diversity = landforms*2 + soil /3


landscape_diversity = landscape_diversity.where(test_1.and(test_2).and(test_3), average_soil_1); // 1)

landscape_diversity = landscape_diversity.where(test_1.and(test_2.not()).and(test_3), average_soil_2); // 2)

landscape_diversity = landscape_diversity.where(test_1.not().and(test_2).and(test_3), average_soil_3); // 3)

landscape_diversity = landscape_diversity.where(test_1.not().and(test_2.not()).and(test_3), average_soil_4); // 4)



