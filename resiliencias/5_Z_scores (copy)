/**
 * This script generates and exports rasters with the z score for each image generated in steps 1:4 in Gee
 * 
 * 

- Steps to calculate Z-scores

1- Calculate the mean and standard deviation for the extention of the images 

2- Subtract the mean from value for each pixel and divide by the sd

3- Export

*/

var bioma = ee.FeatureCollection("projects/ee-lucasljardim9/assets/Biome")
                       .map(function(feature){
                             return feature.bounds()
                            })
                      .geometry()
                        .dissolve({'maxError': 1})
                        .bounds();


//var win_images = ee.Image('projects/ee-lucasljardim9/assets/elevation_range_residual');
//var win_images = ee.Image('projects/ee-lucasljardim9/assets/landform_variety');
//var win_images = ee.Image('projects/ee-lucasljardim9/assets/wetlands_count');
//var win_images = ee.Image('projects/ee-lucasljardim9/assets/wetlands_density');
//var win_images = ee.Image('projects/ee-lucasljardim9/assets/wetlands_density_1000');
//var win_images = ee.Image('projects/ee-lucasljardim9/assets/');

//NOVAS JANELAS ATUALIZADAS

var img_elevation = ee.Image('projects/ee-lucasljardim9/assets/elevation_range_residual');
var img_landform = ee.Image('projects/ee-lucasljardim9/assets/landform_variety');
var img_wetlands_density = ee.Image('projects/ee-resilience/assets/New_window_size/wetlands_density');
var img_wetlands_density1000 = ee.Image('projects/ee-resilience/assets/New_window_size/wetlands_density_1000');
var img_wetlands_count = ee.Image('projects/ee-resilience/assets/New_window_size/wetlands_count');
var img_soil_diversity = ee.Image('projects/ee-resilience/assets/New_window_size/assets/soil_diversity');


// Coding the function to apply the formula of Z-Scores for any raster image that we need

var calculate_Z_scores = function(image) {
  // Calculate mean and standard deviation
  var mean = image.reduceRegion({
    reducer: ee.Reducer.mean(),
    scale: 92.76624,
    bestEffort: true
  });print('Global Mean', mean);

  var sd = image.reduceRegion({
    reducer: ee.Reducer.stdDev(),
    scale: 92.76624,
    bestEffort: true
  }); print('Global sd', sd)

  // Extract the mean and standard deviation values from the dictionaries into a raster
var meanValue = ee.Image.constant(mean
                                  .values()
                                  .get(0));
                                  print('mean Dictionary', meanValue);
                                  
  var sdValue = ee.Image.constant(sd
                                  .values()
                                  .get(0));
                                  print('sd dictionary', sdValue);

  // Calculate z for the current image
  var z = image.subtract(meanValue).divide(sdValue);

  // Return the z image
  return z.rename('z');
};



var Z_elevation = calculate_Z_scores (img_elevation);
var Z_landform = calculate_Z_scores (img_landform);
var Z_wetlands_density = calculate_Z_scores (img_wetlands_density);
var Z_wetlands_density1000 = calculate_Z_scores (img_wetlands_density1000);
var Z_wetlands_count  = calculate_Z_scores (img_wetlands_count );
var Z_soil_diversity = calculate_Z_scores (img_soil_diversity);



Export.image.toAsset({image: Z_elevation, 
                      description: "Z_elevation", 
                      assetId: "Z-Scores_elevation_range", 
                      pyramidingPolicy:"median",
                      region:bioma,
                      scale: win_images.projection().nominalScale(),
                      maxPixels: 1e13});


Export.image.toAsset({image: Z, 
                    description: "Z-Scores_wetlands_count", 
                     assetId: "Z-Scores_wetlands_count", 
                     pyramidingPolicy:"median",
                     region:bioma,
                     scale: win_images.projection().nominalScale(),
                     maxPixels: 1e13});