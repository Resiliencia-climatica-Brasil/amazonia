/**
 * This script generates and exports rasters with the z score for each image generated in steps 1:4 in Gee and then 
 * calculates the Landscape Diversity based on a average between the highest pixel values


- Steps to calculate Z-scores

1- Calculate the mean and standard deviation for the extention of the images 

2- Subtract the mean from value for each pixel and divide by the sd

3- Export


*/

//************************************ Importing Data ***************************************** 


var Biome = ee.FeatureCollection("projects/ee-lucasljardim9/assets/Biome")
                        .map(function(feature){
                             return feature.bounds()
                             })
                        .geometry()
                        .dissolve({'maxError': 1})
                        .bounds();

var brasil_raster = ee.Image("projects/ee-lucasljardim9/assets/brasil_raster");


var img_elevation = ee.Image('projects/ee-lucasljardim9/assets/elevation_range_residual')
                    .updateMask(brasil_raster);

var img_landform = ee.Image('projects/ee-lucasljardim9/assets/landform_variety')
                   .updateMask(brasil_raster);

var img_wetlands_count = ee.Image("projects/ee-resilience/assets/wetlands_count_ALLWETLANDS2")
                   .updateMask(brasil_raster);

var img_wetlands_density = ee.Image("projects/ee-resilience/assets/wetlands_density_ALLWETLANDS2")
                   .updateMask(brasil_raster);

var img_wetlands_density1000 = ee.Image("projects/ee-resilience/assets/wetlands_density_1000_ALLWETLANDS2")
                   .updateMask(brasil_raster);

var solo_vector = ee.FeatureCollection("projects/ee-lucasljardim9/assets/IBGE_solo");

var img_soil_diversity = solo_vector.select("soil_rich")
                     .reduceToImage({properties:["soil_rich"], 
                                     reducer:ee.Reducer.first()})
                      .reproject('EPSG:4326',null, 92.76624);

var scale = img_elevation.projection().nominalScale();

var connectedness = ee.Image("projects/ee-lucasljardim9/assets/Biomas_resistencia_kernel")
                          .multiply(-1);


//************************************ Z-Scores with a Moving Window ***************************************** 



// Coding the function to apply the formula of Z-Scores for any raster image that we need


var calculate_Z_scores = function(image, windows) {
  
  // Calculating the mean
  var mean = image.reduceNeighborhood({
    reducer: ee.Reducer.mean(),
    kernel: ee.Kernel.circle({
                                radius:windows,
                                units:'pixels', 
                                normalize:false
                              }),
  });

  // Calculating the standard deviation
  var sd = image.reduceNeighborhood({
    reducer: ee.Reducer.stdDev(),
    kernel: ee.Kernel.circle({
                                radius:windows,
                                units:'pixels', 
                                normalize:false
                              }),
  });

  // Values as a raster
  var meanValue = mean.rename('mean');
  var sdValue = sd.rename('sd');

  // Calculating the z scores
  var z = image.subtract(meanValue).divide(sdValue).rename('z');

  return z;
};

//Defing the window size in pixels for the moving window

var windows = 200; 

// If you need to test window size the formula bellow will ask you the size you want and change the exporting names for all further assets

/*
var windows = prompt('Enter the window size:', '50');
windows = parseInt(windows);
if (isNaN(windows) || windows <= 0) {
   print('Invalid input. Using default value for the window size.');
  windows = 1;}
*/

print("Confirm your window size",windows); // To check if you choose the right window size

// Landforms, Elevation Range and Soil Diversity and Local Connectedness Z scores --------------------------

//Calculate the Z for Elevation Range
var Z_elevation = calculate_Z_scores(img_elevation, windows);

//Landform Variety
var Z_landform = calculate_Z_scores(img_landform, windows);

//Soil Diversity
var Z_soil_diversity = calculate_Z_scores(img_soil_diversity, windows);

// Local Connectedness
var Z_connectedness = calculate_Z_scores(connectedness, windows);


// Wetlands Diversity -------------------------------------------------------------

//Wetlands Z-score will be determinated by the regional pixel count of wetlands, local density and regional density

// For wetlands we first need to calculate the Z Score for wetlands density in 100 acres

var Z_wetlands_density = calculate_Z_scores (img_wetlands_density, windows);

// Z score for wetlands density in 1000 acres

var Z_wetlands_density1000 = calculate_Z_scores (img_wetlands_density1000, windows);

// Z Score for the wetlands patchness
var Z_wetlands_count  = calculate_Z_scores (img_wetlands_count, windows);

// Now we can calculate the wetland density as the average of the density for 100 and 1000 acres

var wetlands_density = Z_wetlands_density
                        .multiply(2)
                        .add(Z_wetlands_density1000)
                        .divide(3);

//The final Wetland Z score is the average of wetland density and wetland patchness, but ONLY when patchness is higher than density

var wet_test = wetlands_density.lte(Z_wetlands_count);

var wet_average = wetlands_density
                  .multiply(3)
                  .add(Z_wetlands_count)
                  .divide(4);

var Z_wetlands_score = Z_wetlands_density.where(wet_test, wet_average);

var Z_wetlands_score = Z_wetlands_score.updateMask(brasil_raster);

// Load the palettes package.
/*
var palettes=require('users/gena/packages:palettes');// https://github.com/gee-community/ee-palettes
var paleta = palettes.colorbrewer.Spectral[7].reverse();

  
Map.addLayer(img_soil_diversity, {palette:paleta, min:0, max:8})
Map.addLayer(Z_elevation, {palette:paleta, min:0, max:1}, 'Z_elevation');
Map.addLayer(Z_landform, {palette:paleta, min:0, max:1}, 'Z_landform');
Map.addLayer(Z_soil_diversity, {palette:paleta, min:0, max:1}, 'Z_soil_diversity');
Map.addLayer(Z_wetlands_score, {palette:paleta, min:0, max:1}, 'Z_wetlands_score');
Map.addLayer(Z_connectedness, {palette:paleta, min:0, max:1}, 'Z_connectedness');
*/


// Exporting Z Scores

/*
Export.image.toAsset({image: Z_elevation, 
                      description: "Z_elevation"+ windows.toString(), 
                      assetId: "Moving_window_NEWSCALE/Z-Scores_elevation_range_movingwindow_" + windows.toString(), 
                      pyramidingPolicy:"median",
                      region:brasil_raster,
                      scale: scale,
                      maxPixels: 1e13});


Export.image.toAsset({image: Z_landform, 
                    description: "Z_landform"+ windows.toString(), 
                     assetId: "Moving_window_NEWSCALE/Z-Scores_landforms_movingwindow_"+ windows.toString(), 
                     pyramidingPolicy:"median",
                     region:brasil_raster,
                     scale: scale,
                     maxPixels: 1e13});


Export.image.toAsset({image: Z_soil_diversity, 
                      description: "Z_soil_diversity"+ windows.toString(), 
                      assetId: "Moving_window_NEWSCALE/Z-Scores_soil_diversity_movingwindow_"+ windows.toString(), 
                      pyramidingPolicy:"median",
                      region:brasil_raster,
                      scale: scale,
                      maxPixels: 1e13});
*/

Export.image.toAsset({image: Z_wetlands_score, 
                      description: "Z_wetlands_score"+ windows.toString(), 
                      assetId: "Moving_window_NEWSCALE/Z-Scores_wetlands_movingwindow_UNMASKED2_"+ windows.toString(), 
                      pyramidingPolicy:"median",
                      region:brasil_raster,
                      scale: scale,
                      maxPixels: 1e13});

/*
Export.image.toAsset({image: Z_connectedness, 
                      description: "Z_connectedness"+ windows.toString(), 
                      assetId: "Moving_window_NEWSCALE/Z_connectedness_movingwindow_" + windows.toString(), 
                      pyramidingPolicy:"median",
                      region:brasil_raster,
                      scale: scale,
                      maxPixels: 1e13});

*/