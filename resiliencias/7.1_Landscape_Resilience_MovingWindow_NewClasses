//************************************ Landscape Diversity******************************************************

var biome = ee.FeatureCollection("projects/ee-lucasljardim9/assets/Biome")
                       .select("Bioma")
                       .filter(ee.Filter.eq("Bioma", "Cerrado"));

var brasil_raster = ee.Image("projects/ee-resilience/assets/brasil_raster");

var scale = brasil_raster.projection().nominalScale();

var UC_FedEstMun = ee.FeatureCollection("projects/ee-resilience/assets/UC_FedEstMun");

var UC_Ti = ee.FeatureCollection("projects/ee-resilience/assets/UC_Ti"); 

/* // Vai perguntar o tamanho de janela que você vai usar. se já tivermos decidido usar a formula de baixo
var windows = prompt('Enter the window size based on the Z image name:', '50');
windows = parseInt(windows);
if (isNaN(windows) || windows <= 0) {
   print('Invalid input. Using default value for the window size.');
  windows = 50;}
print(windows);
*/

var windows = 200;

var diversity  = ee.Image('projects/ee-resilience/assets/Moving_window_NEWSCALE/Landscape_diversity_movingwindow_ORIGINAL_UNMASKED_200')
                   .updateMask(brasil_raster);


var connectedness = ee.Image("projects/ee-resilience/assets/C2_Resistencia") //New Local connectedness layer with rivers
                          .updateMask(brasil_raster)
                          .multiply(-1); 

var omniscape = ee.Image("projects/ee-lucasljardim9/assets/Cerrado_cum_currmap"); 

// The classes are calculated as the sum of the classified values of the original rasters 
/*

|Group      | Diversity   |Connectedness   | Values in Gee |

|Group 1    |    <25%     |     <25%       |       12      |
|Group 2    |    <25%     |     25-50%     |       22      |
|Group 3    |    <25%     |     50-75%     |       32      |
|Group 4    |    <25%     |     >75%       |       42      |
|Group 5    |    25-50%   |     <25%       |       13      |
|Group 6    |    25-50%   |     25-50%     |       23      |
|Group 7    |    25-50%   |     50-75%     |       33      |
|Group 8    |    25-50%   |     >75%       |       43      |
|Group 9    |    50-75%   |     <25%       |       14      |
|Group 10   |    50-75%   |     25-50%     |       24      |
|Group 11   |    50-75%   |     50-75%     |       34      |
|Group 12   |    50-75%   |     >75%       |       44      |
|Group 13   |    >75%     |     <25%       |       15      |
|Group 14   |    >75%     |     25-50%     |       25      |
|Group 15   |    >75%     |     50-75%     |       35      |
|Group 16   |    >75%     |     >75%       |       45      |

*/

// Compute the quantiles for each raster, the value of the quantiles will be stored as a band

var quartiles_Div = diversity.reduceRegion({
    reducer: ee.Reducer.percentile([25, 50, 75]), 
    scale: diversity.projection().nominalScale(),
    maxPixels:1e13,
    bestEffort: false
  }); 

var quartiles_Con = connectedness.reduceRegion({
    reducer: ee.Reducer.percentile([25, 50, 75]), 
    scale: connectedness.projection().nominalScale(),
    maxPixels:1e13,
    bestEffort: false
  });

var quartiles_Omn = omniscape.reduceRegion({
    reducer: ee.Reducer.percentile([25, 50, 75]), 
    scale: omniscape.projection().nominalScale(),
    maxPixels:1e13,
    bestEffort: false
  });
  
//creating the classes for Diversity based on the valeus.
var div_25 = quartiles_Div.getNumber('z_p25');
var div_50 = quartiles_Div.getNumber('z_p50');
var div_75 = quartiles_Div.getNumber('z_p75');

var class_div = diversity 
.where(diversity.lt(div_25), 1)  
.where(diversity.gte(div_25).and(diversity.lt(div_50)), 2)
.where(diversity.gte(div_50).and(diversity.lt(div_75)), 3)
.where(diversity.gte(div_75).and(diversity), 4);

//creating the classes for Connectedness
var con_25 = quartiles_Con.getNumber('b1_p25');
var con_50 = quartiles_Con.getNumber('b1_p50');
var con_75 = quartiles_Con.getNumber('b1_p75');

var class_con = connectedness
.where(connectedness.lt(con_25),10)
.where(connectedness.gte(con_25).and(connectedness.lt(con_50)), 20)
.where(connectedness.gte(con_50).and(connectedness.lt(con_75)),30)
.where(connectedness.gte(con_75).and(connectedness), 40);

//creating the classes for Connectedness by omniscape
var omn_25 = quartiles_Omn.getNumber('b1_p25');
var omn_50 = quartiles_Omn.getNumber('b1_p50');
var omn_75 = quartiles_Omn.getNumber('b1_p75');

var class_omn = omniscape
.where(omniscape.lt(omn_25),10)
.where(omniscape.gte(omn_25).and(omniscape.lt(omn_50)), 20)
.where(omniscape.gte(omn_50).and(omniscape.lt(omn_75)),30)
.where(omniscape.gte(omn_75).and(omniscape), 40);

//// Sum the classified rasters to create the landscape_resilience image

var resilience = class_div.add(class_con);

var resilience_omn = class_div.clip(biome).add(class_omn);

//Ploting Raw local connectedness
var palettes=require('users/gena/packages:palettes');// https://github.com/gee-community/ee-palettes
var palette_con = palettes.colorbrewer.Spectral[11];
var palette_div = palettes.colorbrewer.Spectral[7];

Map.addLayer(connectedness, {min: -66, max:-4, palette:palette_con}, 'connectedness');
Map.addLayer(diversity, {min: -0.24670152313016386, max:2.6232507855865874, palette:palette_div}, 'diversity');

Map.centerObject(brasil_raster);

var sld_intervals =
  '<RasterSymbolizer>' +
    '<ColorMap type="intervals" extended="false">' +
      '<ColorMapEntry color="#d3d3d3" quantity="11" label="11"/>' +
      '<ColorMapEntry color="#95bdd5" quantity="12" label="12"/>' +
      '<ColorMapEntry color="#52a6d7" quantity="13" label="13"/>' +
      '<ColorMapEntry color="#0088d9" quantity="14" label="14"/>' +
      '<ColorMapEntry color="#d5ce9c" quantity="21" label="21"/>' +
      '<ColorMapEntry color="#96b89e" quantity="22" label="22"/>' +
      '<ColorMapEntry color="#53a19f" quantity="23" label="23"/>' +
      '<ColorMapEntry color="#0085a1" quantity="24" label="24"/>' +
      '<ColorMapEntry color="#d7c759" quantity="31" label="31"/>' +
      '<ColorMapEntry color="#98b35a" quantity="32" label="32"/>' +
      '<ColorMapEntry color="#539c5b" quantity="33" label="33"/>' +
      '<ColorMapEntry color="#00815c" quantity="34" label="34"/>' +
      '<ColorMapEntry color="#d9be00" quantity="41" label="41"/>' +
      '<ColorMapEntry color="#9aaa00" quantity="42" label="42"/>' +
      '<ColorMapEntry color="#549500" quantity="43" label="43"/>' +
      '<ColorMapEntry color="#007b00" quantity="44" label="44"/>' +
    '</ColorMap>' +
  '</RasterSymbolizer>';

var sld_div =
  '<RasterSymbolizer>' +
    '<ColorMap type="intervals" extended="false">' +
      '<ColorMapEntry color="#d3d3d3" quantity="1" label="1"/>' +
      '<ColorMapEntry color="#95bdd5" quantity="2" label="2"/>' +
      '<ColorMapEntry color="#52a6d7" quantity="3" label="3"/>' +
      '<ColorMapEntry color="#0088d9" quantity="4" label="4"/>' +
      '</ColorMap>' +
  '</RasterSymbolizer>';

var sld_con=
  '<RasterSymbolizer>' +
    '<ColorMap type="intervals" extended="false">' +
      '<ColorMapEntry color="#d3d3d3" quantity="10" label="10"/>' +
      '<ColorMapEntry color="#d5ce9c" quantity="20" label="20"/>' +
      '<ColorMapEntry color="#d7c759" quantity="30" label="30"/>' +
      '<ColorMapEntry color="#d9be00" quantity="40" label="40"/>' +
      '</ColorMap>' +
  '</RasterSymbolizer>';
  

Map.addLayer(resilience
             .reproject('EPSG:4326', null, 92.76624)
             .sldStyle(sld_intervals),{}, 'Landscape Resilience');

Map.addLayer(resilience_omn
             .reproject('EPSG:4326', null, 92.76624)
             .sldStyle(sld_intervals),{}, 'Landscape Resilience Omniscape Cerrado');

Map.addLayer(class_div
             .reproject('EPSG:4326', null, 92.76624)
             .sldStyle(sld_div),{}, 'Landscape Heterogeneity');


Map.addLayer(class_con
             .reproject('EPSG:4326', null, 92.76624)
             .sldStyle(sld_con),{}, 'Local Connectedness');             

Export.image.toDrive({
		image:resilience
             .reproject('EPSG:4326', null, 92.76624)
             .sldStyle(sld_intervals),
	description:'Resilience_bivariate_col',
	region:brasil_raster,
	scale:scale,
	maxPixels:1e13,
});



Export.image.toDrive({
		image:class_div
             .reproject('EPSG:4326', null, 92.76624)
             .sldStyle(sld_div),
	description:'Resilience_bivariate_col',
	region:brasil_raster,
	scale:scale,
	maxPixels:1e13,
});

Export.image.toDrive({
		image:class_con
             .reproject('EPSG:4326', null, 92.76624)
             .sldStyle(sld_con),
	description:'Resilience_bivariate_col',
	region:brasil_raster,
	scale:scale,
	maxPixels:1e13,
});


