var Biome = ee.FeatureCollection("projects/ee-lucasljardim9/assets/Biome")
                        .map(function(feature){
                             return feature.bounds()
                             })
                        .geometry()
                        .dissolve({'maxError': 1})
                        .bounds();

var brasil_raster = ee.Image("projects/ee-lucasljardim9/assets/brasil_raster");

var scale = brasil_raster.projection().nominalScale();

// Function to run the code for 50 pixel size
function runOption1() {
var Z_landform = ee.Image('projects/ee-resilience/assets/Moving_window_TEMP/Z-Scores_landforms_movingwindow_50')
                   .updateMask(brasil_raster);

var Z_elevation = ee.Image('projects/ee-resilience/assets/Moving_window_TEMP/Z-Scores_elevation_range_movingwindow_50')
                    .updateMask(brasil_raster);

var Z_wetlands_score = ee.Image('projects/ee-resilience/assets/Moving_window_TEMP/Z-Scores_wetlands_movingwindow_50')
                   .updateMask(brasil_raster);

var Z_soil_diversity = ee.Image('projects/ee-resilience/assets/Moving_window_TEMP/Z-Scores_soil_diversity_movingwindow_50')
                         .updateMask(brasil_raster);
var window = 50
print('Running the Scaling to Z-scores in a Moving Window of 50 pixels')
  
  
}

// Function to run the code for 100 pixel size
function runOption2() {
  var Z_landform = ee.Image('projects/ee-resilience/assets/Moving_window_TEMP/Z-Scores_landforms_movingwindow_100')
                   .updateMask(brasil_raster);

  var Z_elevation = ee.Image('projects/ee-resilience/assets/Moving_window_TEMP/Z-Scores_elevation_range_movingwindow_100')
                    .updateMask(brasil_raster);

  var Z_wetlands_score = ee.Image('projects/ee-resilience/assets/Moving_window_TEMP/Z-Scores_wetlands_movingwindow_100')
                   .updateMask(brasil_raster);

  var Z_soil_diversity = ee.Image('projects/ee-resilience/assets/Moving_window_TEMP/Z-Scores_soil_diversity_movingwindow_100')
                         .updateMask(brasil_raster);
  var window = 100
print('Running the Scaling to Z-scores in a Moving Window of 100 pixels')

  
  
}

// Function to run the code for the 200 pixel size
function runOption3() {
  var Z_landform = ee.Image('projects/ee-resilience/assets/Moving_window_TEMP/Z-Scores_landforms_movingwindow_200')
                   .updateMask(brasil_raster);

  var Z_elevation = ee.Image('projects/ee-resilience/assets/Moving_window_TEMP/Z-Scores_elevation_range_movingwindow_200')
                    .updateMask(brasil_raster);

  var Z_wetlands_score = ee.Image('projects/ee-resilience/assets/Moving_window_TEMP/Z-Scores_wetlands_movingwindow_200')
                   .updateMask(brasil_raster);

  var Z_soil_diversity = ee.Image('projects/ee-resilience/assets/Moving_window_TEMP/Z-Scores_soil_diversity_movingwindow_200')
                         .updateMask(brasil_raster);
  var window = 200
print('Running the Scaling to Z-scores in a Moving Window of 200 pixels')

  
  
}

// Create a function to show the input dialog with three buttons
function showInputDialog() {
  // Create three buttons for the options
  var button1 = ui.Button({
    label: 'Option 1',
    onClick: function() {
      runOption1();
      dialog.style().set('shown', false);
    }
  });

  var button2 = ui.Button({
    label: 'Option 2',
    onClick: function() {
      runOption2();
      dialog.style().set('shown', false);
    }
  });

  var button3 = ui.Button({
    label: 'Option 3',
    onClick: function() {
      runOption3();
      dialog.style().set('shown', false);
    }
  });

  // Create a panel to hold the buttons
  var buttonPanel = ui.Panel({
    widgets: [button1, button2, button3],
    layout: ui.Panel.Layout.flow('horizontal'),
    style: { width: '300px' }
  });

  // Create a panel to show the dialog
  var dialog = ui.Panel({
    widgets: [buttonPanel],
    style: { width: '350px', position: 'bottom-right' }
  });

  // Add the dialog panel to the map
  Map.add(dialog);
}

// Call the function to show the input dialog when you want to ask for the user's choice
showInputDialog();



//Scaling the Z values based on the min-max scaling technique
var scale_z = function(image){
var minmax = image.reduceRegion({
reducer: ee.Reducer.percentile([0,100]),
scale: scale,
maxPixels:1e20,
bestEffort: true
}); print('minmax', minmax); // if you want so see the values of the minmax

var minValue = minmax.getNumber('z_p0'); 

var maxValue = minmax.getNumber('z_p100'); 

var z_scaled = image.subtract(minValue)
.divide(maxValue.subtract(minValue))
.rename('scaled');

return z_scaled;
};

var Z_elevation_scaled = scale_z(Z_elevation);

var Z_landform_scaled = scale_z(Z_landform);

var Z_soil_diversity_scaled = scale_z(Z_soil_diversity);

var Z_wetlands_score_scaled = scale_z(Z_wetlands_score);


// Map.addLayer(Z_elevation_scaled,      {palette:'black', min:0, max:1}, 'Z_elevation');
// Map.addLayer(Z_landform_scaled,       {palette:'red', min:0, max:1}, 'Z_landform');
// Map.addLayer(Z_soil_diversity_scaled, {palette:'green', min:0, max:1}, 'Z_soil_diversity');
// Map.addLayer(Z_wetlands_score_scaled, {palette:'blue', min:0, max:1}, 'Z_wetlands_scor');


Export.image.toAsset({image: Z_elevation_scaled, 
                      description: "Z_elevation"+ windows.toString(), 
                      assetId: "Moving_window_TEMP/Z-Scores_elevation_range_movingwindow_" + windows.toString(), 
                      pyramidingPolicy:"median",
                      region:Biome,
                      scale: scale,
                      maxPixels: 1e13});


Export.image.toAsset({image: Z_landform_scaled, 
                    description: "Z_landform"+ windows.toString(), 
                     assetId: "Moving_window_TEMP/Z-Scores_landforms_movingwindow_"+ windows.toString(), 
                     pyramidingPolicy:"median",
                     region:Biome,
                     scale: scale,
                     maxPixels: 1e13});


Export.image.toAsset({image: Z_soil_diversity_scaled, 
                      description: "Z_soil_diversity"+ windows.toString(), 
                      assetId: "Moving_window_TEMP/Z-Scores_soil_diversity_movingwindow_"+ windows.toString(), 
                      pyramidingPolicy:"median",
                      region:Biome,
                      scale: scale,
                      maxPixels: 1e13});


Export.image.toAsset({image: Z_wetlands_score_scaled, 
                      description: "Z_wetlands_score"+ windows.toString(), 
                      assetId: "Moving_window_TEMP/Z-Scores_wetlands_movingwindow_"+ windows.toString(), 
                      pyramidingPolicy:"median",
                      region:Biome,
                      scale: scale,
                      maxPixels: 1e13});

